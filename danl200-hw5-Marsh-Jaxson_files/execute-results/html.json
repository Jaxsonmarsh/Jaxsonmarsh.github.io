{
  "hash": "f54b69a0099e206784a1e5faf486190d",
  "result": {
    "markdown": "---\ntitle: \"danl200-hw5-Marsh-Jaxson.qmd\"\neditor: visual\n---\n\n# Q1a\n# Provide a link for your GihtHub repository,\n\nhttps://github.com/Jaxsonmarsh/Jaxsonmarsh.github.io\n\n#Q2\n# The following is the data.frame for Question 2.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nNFL2022_stuffs <- read_csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 50147 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): game_id, posteam\ndbl (8): play_id, drive, week, qtr, down, half_seconds_remaining, pass, wp\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n\n#Q2a\n# In data.frame, NFL2022_stuffs, remove observations for which values of posteam is missing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNFL2022_stuffs <- subset(NFL2022_stuffs, !is.na(posteam))\n```\n:::\n\n\n#Q2b\n#Summarize the mean value of pass for each posteam when all the following conditions hold:\n#   -wp is greater than 20% and less than 75%;\n#   -down is less than or equal to 2; and\n#   -half_seconds_remaining is greater than 120.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nfiltered_data <- NFL2022_stuffs %>%\n  filter(wp > 0.2 & wp < 0.75, down <= 2, half_seconds_remaining > 120)\nsummary_data <- filtered_data %>%\n  group_by(posteam) %>%\n  summarize(mean_pass = mean(pass, na.rm = TRUE))\n```\n:::\n\n\n\n#Q2c\n#Provide both (1) a ggplot code with geom_point() using the resulting data.frame in Q2b and (2) a simple comment to describe the mean value of pass for each posteam.\n#   -In the ggplot, reorder the posteam categories based on the mean value of pass in ascending or in descending order.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_data <- summary_data %>%\n  arrange(mean_pass)\n\nlibrary(ggplot2)\n\nggplot(summary_data, aes(x = reorder(posteam, mean_pass), y = mean_pass)) +\n  geom_point() +\n  labs(title = \"Mean Value of pass for Each posteam\",\n       x = \"Percentage of pass plays\",\n       y = \"Team with posession\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](danl200-hw5-Marsh-Jaxson_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nThis scatterplot shows that the mean value of pass for each posteam becomes greater, when the team with posession increases their percentage of passing plays.\n\n#Q2d\n#Consider the following data.frame, NFL2022_epa:\n\n::: {.cell}\n\n```{.r .cell-code}\nNFL2022_epa <- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 46427 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): game_id, posteam, receiver, passer\ndbl (3): play_id, drive, epa\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n\n#Create the data.frame, NFL2022_stuffs_EPA, that includes:\n#   -All the variables in the data.frame, NFL2022_stuffs;\n#   -The variables, passer, receiver, and epa, from the data.frame, NFL2022_epa. by joining the two data.frames.\n#   -In the resulting data.frame, NFL2022_stuffs_EPA, remove observations with NA in passer.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nNFL2022_stuffs_EPA <- merge(NFL2022_stuffs, NFL2022_epa[, c(\"game_id\", \"passer\", \"receiver\", \"epa\")], by = \"game_id\", all.x = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nNFL2022_stuffs_EPA <- na.omit(NFL2022_stuffs_EPA)\n```\n:::\n\n\n#Q2e\n#Provide both (1) a single ggplot and (2) a simple comment to describe the NFL weekly trend of weekly mean value of epa for each of the following two passers,\n#   -\"J.Allen\"\n#   -\"P.Mahomes\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nfiltered_data <- NFL2022_stuffs_EPA %>%\n  filter(passer %in% c(\"J.Allen\", \"P.Mahomes\"))\n\nggplot(filtered_data, aes(x = week, y = epa, color = passer, group = passer)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Weekly Trend of Mean EPA for J.Allen and P.Mahomes\",\n       x = \"Week\",\n       y = \"Mean EPA\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](danl200-hw5-Marsh-Jaxson_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nThe weekly trend plot illustrates the mean EPA values for passes made by quarterbacks J.Allen and P.Mahomes throughout the NFL 2022 season. We can observe that both quaterbacks follow a similar pattern, with Josh Allen hitting lower lows, and Patrick Mahomes reaching a much higher EPA in the end.\n\n#Q2f\n#Calculate the difference between the mean value of epa for \"J.Allen\" the mean value of epa for \"P.Mahomes\" for each value of week.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_epa <- filtered_data %>%\n  group_by(week, passer) %>%\n  summarise(mean_epa = mean(epa, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'week'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nmean_epa_wide <- pivot_wider(mean_epa, names_from = passer, values_from = mean_epa)\n\nmean_epa_wide <- mean_epa_wide %>%\n  mutate(diff_epa = J.Allen - P.Mahomes)\n```\n:::\n\n\n\n#Q2g\n#Summarize the resulting data.frame in Q2d, with the following four variables:\n#   -posteam: String abbreviation for the team with possession.\n#   -passer: Name of the player who passed a ball to a receiver by initially taking a three-step drop, and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks.)\n#   -mean_epa: Mean value of epa in 2022 for each passer\n#   -n_pass: Number of observations for each passer\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_data <- NFL2022_stuffs_EPA %>%\n  group_by(posteam, passer) %>%\n  summarise(mean_epa = mean(epa, na.rm = TRUE),\n            n_pass = n())\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'posteam'. You can override using the\n`.groups` argument.\n```\n:::\n:::\n\n\n\n#Then find the top 10 NFL passers in 2022 in terms of the mean value of epa, conditioning that n_pass must be greater than or equal to the third quantile level of n_pass.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npasser_summary <- NFL2022_stuffs_EPA %>%\n  group_by(passer) %>%\n  summarise(mean_epa = mean(epa, na.rm = TRUE),\n            n_pass = n())\n\nquantile_threshold <- quantile(passer_summary$n_pass, 0.75)\n\ntop_passers <- passer_summary %>%\n  filter(n_pass >= quantile_threshold) %>%\n  arrange(desc(mean_epa)) %>%\n  head(10)\n```\n:::\n\n\n\n---\n",
    "supporting": [
      "danl200-hw5-Marsh-Jaxson_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}